{"is_source_file": true, "format": "C# (for .NET Core / ASP.NET Core application)", "description": "This is a main application entry point for a queue management backend service, setting up services, middleware, and REST API endpoints for enqueue, dequeue, and status functionalities.", "external_files": ["Dotnet.Models", "Dotnet.Services", "Microsoft.AspNetCore.Builder", "Microsoft.Extensions.DependencyInjection", "Microsoft.OpenApi.Models"], "external_methods": ["WebApplication.CreateBuilder", "builder.Services.AddEndpointsApiExplorer", "builder.Services.AddOpenApiDocument", "options.AddPolicy", "app.UseCors", "app.UseOpenApi", "app.UseSwaggerUi", "app.MapGet", "app.MapPost"], "published": ["HealthCheck", "Enqueue", "Dequeue", "QueueStatus"], "classes": [], "methods": [{"name": "HealthCheck", "description": "Endpoint that returns a simple health status message."}, {"name": "Enqueue", "description": "Endpoint to enqueue an item into the queue service."}, {"name": "Dequeue", "description": "Endpoint to dequeue an item from the queue service."}, {"name": "QueueStatus", "description": "Endpoint to retrieve current queue status."}], "calls": ["builder.Services.AddEndpointsApiExplorer()", "builder.Services.AddOpenApiDocument()", "app.UseCors()", "app.UseOpenApi()", "app.UseSwaggerUi()", "app.MapGet()", "app.MapPost()", "queueService.EnqueueAsync()", "queueService.DequeueAsync()", "queueService.GetStatusAsync()"], "search-terms": ["Program.cs", "queue management system", "REST endpoints", "enqueue", "dequeue", "queue status", "OpenAPI", "Swagger UI", "ASP.NET Core", "In-memory queue service"], "state": 2, "file_id": 3, "knowledge_revision": 28, "git_revision": "c7c2377dc9cca8deb000e0399656b8e6e4304bd2", "revision_history": [{"11": "c7c2377dc9cca8deb000e0399656b8e6e4304bd2"}, {"12": "c7c2377dc9cca8deb000e0399656b8e6e4304bd2"}, {"28": "c7c2377dc9cca8deb000e0399656b8e6e4304bd2"}], "hash": "b6c60238d484b6d608897b16029a9be5", "format-version": 4, "code-base-name": "queue_backend", "filename": "queue_backend/Program.cs"}