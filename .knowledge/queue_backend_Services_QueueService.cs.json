{"is_source_file": true, "format": "C#", "description": "This file defines a QueueService class implementing an in-memory queue with JSON persistence, providing enqueue, dequeue, and status retrieval functionalities. It also handles loading initial state from disk and persisting changes asynchronously.", "external_files": ["System.Collections.Concurrent", "System.Text.Json", "Dotnet.Models", "Microsoft.Extensions.Logging"], "external_methods": ["Path.Combine", "File.Exists", "File.ReadAllText", "JsonSerializer.Deserialize", "Directory.CreateDirectory", "JsonSerializer.SerializeAsync", "Task.FromResult"], "published": ["EnqueueResponse", "QueueStatusResponse"], "classes": [{"name": "QueueService", "description": "In-memory queue service with JSON file persistence, providing enqueue, dequeue, and status methods, with disk state loading and saving capabilities."}], "methods": [{"name": "QueueService", "description": "Constructor that initializes the queue service, resolving storage path, and loading persisted state from disk."}, {"name": "EnqueueAsync", "description": "Adds an item to the queue and persists the state asynchronously."}, {"name": "DequeueAsync", "description": "Removes and returns the oldest item from the queue, then persists the updated state."}, {"name": "GetStatusAsync", "description": "Returns the current queue status, including count and empty state."}, {"name": "LoadFromDisk", "description": "Loads queue state from the JSON persistence file, if available."}, {"name": "PersistAsync", "description": "Asynchronously serializes the current queue state to disk, ensuring thread safety with a semaphore."}], "calls": ["JsonSerializer.Deserialize", "Directory.CreateDirectory", "JsonSerializer.SerializeAsync"], "search-terms": ["QueueService", "PersistentQueue", "JSON file queue", "ConcurrentQueue", "LoadFromDisk", "PersistAsync"], "state": 2, "file_id": 7, "knowledge_revision": 16, "git_revision": "", "hash": "7f85ee634bbf65d5c4ca76550c256001", "format-version": 4, "code-base-name": "queue_backend", "filename": "queue_backend/Services/QueueService.cs", "revision_history": [{"16": ""}]}