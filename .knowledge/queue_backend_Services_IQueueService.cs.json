{"is_source_file": true, "format": "C# interface", "description": "This file defines the IQueueService interface, which abstracts queue operations such as enqueue, dequeue, and retrieving queue status in a queue management system.", "external_files": ["Dotnet.Models"], "external_methods": [], "published": ["IQueueService", "EnqueueAsync", "DequeueAsync", "GetStatusAsync"], "classes": [{"name": "IQueueService", "description": "An interface defining queue operation methods for enqueueing, dequeueing, and getting queue status."}], "methods": [{"name": "EnqueueAsync", "description": "Enqueues a new payload into the queue, returning details about the enqueued item, including its position."}, {"name": "DequeueAsync", "description": "Dequeues the next item from the queue, or null if the queue is empty."}, {"name": "GetStatusAsync", "description": "Retrieves the current status of the queue, including item count and whether it is empty."}], "calls": ["Task<EnqueueResponse>.EnqueueAsync", "Task<QueueItem?>.DequeueAsync", "Task<QueueStatusResponse>.GetStatusAsync"], "search-terms": ["IQueueService", "queue operations", "enqueue", "dequeue", "queue status", "C# interface", "queue management system"], "state": 2, "file_id": 6, "knowledge_revision": 14, "git_revision": "", "hash": "197916a729b02975a78ead33add1d2a2", "format-version": 4, "code-base-name": "queue_backend", "filename": "queue_backend/Services/IQueueService.cs", "revision_history": [{"14": ""}]}